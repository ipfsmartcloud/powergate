syntax = "proto3";
package proto.admin.v1;

import "ffs/rpc/rpc.proto";

option go_package = "github.com/textileio/powergate/proto/admin/v1";

// Instances

message CreateInstanceRequest {
}

message CreateInstanceResponse {
   string id = 1;
   string token = 2;
}

message ListInstancesRequest {
}

message ListInstancesResponse {
   repeated string instances = 1;
}

// Jobs

message QueuedStorageJobsRequest {
  string instance_id = 1;
  repeated string cids = 2;
}

message QueuedStorageJobsResponse {
  repeated ffs.rpc.Job storage_jobs = 1;
}

message ExecutingStorageJobsRequest {
  string instance_id = 1;
  repeated string cids = 2;
}

message ExecutingStorageJobsResponse {
  repeated ffs.rpc.Job storage_jobs = 1;
}

message LatestFinalStorageJobsRequest {
  string instance_id = 1;
  repeated string cids = 2;
}

message LatestFinalStorageJobsResponse {
  repeated ffs.rpc.Job storage_jobs = 1;
}

message LatestSuccessfulStorageJobsRequest {
  string instance_id = 1;
  repeated string cids = 2;
}

message LatestSuccessfulStorageJobsResponse {
  repeated ffs.rpc.Job storage_jobs = 1;
}

message StorageJobsSummaryRequest {
  string instance_id = 1;
  repeated string cids = 2;
}

message StorageJobsSummaryResponse {
  ffs.rpc.JobCounts job_counts = 1;
  repeated ffs.rpc.Job queued_storage_jobs = 2;
  repeated ffs.rpc.Job executing_storage_jobs = 3;
  repeated ffs.rpc.Job latest_final_storage_jobs = 4;
  repeated ffs.rpc.Job latest_successful_storage_jobs = 5;
}

service PowergateAdminService {
  // Instances
  rpc CreateInstance(CreateInstanceRequest) returns (CreateInstanceResponse) {}
  rpc ListInstances(ListInstancesRequest) returns (ListInstancesResponse) {}

  // Jobs
  rpc QueuedStorageJobs(QueuedStorageJobsRequest) returns (QueuedStorageJobsResponse) {}
  rpc ExecutingStorageJobs(ExecutingStorageJobsRequest) returns (ExecutingStorageJobsResponse) {}
  rpc LatestFinalStorageJobs(LatestFinalStorageJobsRequest) returns (LatestFinalStorageJobsResponse) {}
  rpc LatestSuccessfulStorageJobs(LatestSuccessfulStorageJobsRequest) returns (LatestSuccessfulStorageJobsResponse) {}
  rpc StorageJobsSummary(StorageJobsSummaryRequest) returns (StorageJobsSummaryResponse) {}
}